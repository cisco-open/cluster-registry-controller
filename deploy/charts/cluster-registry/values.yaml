# Default values for cluster-registry-controller
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicas: 1

localCluster:
  # specify to automatically provision the cluster object upon first start
  name: ""
  manageSecret: true

istio:
  revision: ""

podAnnotations: {}
imagePullSecrets: []

podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
image:
  repository: ghcr.io/cisco-open/cluster-registry-controller
  tag: v0.2.10
  pullPolicy: IfNotPresent

nodeSelector: {}
affinity: {}
tolerations: []
resources:
  requests:
    memory: "150Mi"
    cpu: "100m"
  limits:
    memory: "300Mi"
    cpu: "300m"

service:
  type: ClusterIP
  port: 8080

health:
  port: 8090

serviceAccount:
  annotations: {}

podDisruptionBudget:
  enabled: false

controller:
  leaderElection:
    enabled: true
    name: "cluster-registry-leader-election"
  log:
    format: json
    verbosity: 0
  workers: 2
  apiServerEndpointAddress: ""
  network:
    name: "default"
  coreResourceSource:
    enabled: true

webhooks:
  # clusterValidator is a validation admission webhook for cluster custom
  # resources.
  clusterValidator:
    # Enabled is the switch for turning the webhook on or off.
    enabled: true

    # CertificateDirectory is the path storing the certificate files.
    certificateDirectory: /tmp/webhooks/clusterValidator/certificates

    # Name is the suffix for the webhook's identifier. The controller's name
    # will be prepended to this value with a dash.
    nameSuffix: cluster-validator-webhook

    # Port is the port number on which the webhook is served in the container.
    port: 9443
